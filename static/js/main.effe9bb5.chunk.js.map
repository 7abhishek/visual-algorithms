{"version":3,"sources":["components/SelectionSortComponent.js","components/BubbleSortComponent.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","chart","marginTop","marginRight","marginLeft","marginBottom","SelectionSortComponent","props","inputData","delayInMs","_useState","useState","_useState2","Object","slicedToArray","data","setData","classes","updateStateWithDelay","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","snapShot","wrap","_context","prev","next","Promise","resolve","setTimeout","stop","_x","apply","this","arguments","react_default","createElement","Grid","container","className","item","es6","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","Button","color","variant","onClick","selectionSort","mutableData","i","j","min","minIndex","_ref2","_callee2","event","temp","_context2","length","abrupt","Array","from","number","undefined","_x2","BubbleSortComponent","bubbleSort","root","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","App","map","num","xs","sm","md","lg","Paper","SelectionSortComponent_SelectionSortComponent","BubbleSortComponent_BubbleSortComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.effe9bb5.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport {\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\nimport { Button, makeStyles, Grid } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n    chart :{\n        marginTop: 5, \n        marginRight: 30, \n        marginLeft: 20, \n        marginBottom: 5,\n    }\n}))\n\nexport const SelectionSortComponent = (props) => {\n    const {inputData, delayInMs} = props\n    const [data, setData] = useState(inputData)\n    const classes = useStyles()\n\n    const updateStateWithDelay = async (snapShot) => {\n        await new Promise(resolve => {\n            setTimeout(() => {                \n                resolve(setData(snapShot))\n        }, delayInMs)\n        })\n    }\n\n    const selectionSort = (mutableData, i,j, min, minIndex) => async event => {\n        if(i === j === mutableData.length) {\n            return\n        }\n        if(i < j && i < mutableData.length - 1 && j === mutableData.length) {\n            const temp = mutableData[i]\n            mutableData[i] = mutableData[minIndex]\n            mutableData[minIndex] = temp\n            const snapShot = Array.from(mutableData)\n            await updateStateWithDelay(snapShot)\n            selectionSort(mutableData, i+1, i+2, mutableData[i+1].number, i+1)(undefined)\n        }\n        if(i < j  && j < mutableData.length) {\n           if(mutableData[j].number < min) {\n                minIndex = j\n                min = mutableData[j].number\n            }\n            selectionSort(mutableData, i, j+1, min, minIndex)(undefined)\n        }\n    }\n\n    return (\n        <Grid container className={classes.chart}> \n        <Grid item>        \n           <BarChart width={500} height={300} data={data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"number\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"number\" fill=\"#616161\" />\n      </BarChart>\n        <Button color=\"primary\" variant=\"outlined\" onClick={selectionSort(Array.from(data),0,1, data[0].number, 0)}> Selection Sort </Button> \n        </Grid>                 \n        </Grid>\n    )\n}","import React, {useState} from 'react'\nimport {\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\nimport { Button , makeStyles, Grid} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    chart :{\n        marginTop: 5, \n        marginRight: 30, \n        marginLeft: 20, \n        marginBottom: 5,\n    }\n}))\n\nexport const BubbleSortComponent = (props) => {\n    const {inputData, delayInMs} = props\n    const [data, setData] = useState(inputData)\n    const classes = useStyles()\n\n    const updateStateWithDelay = async (snapShot) => {\n        return new Promise(resolve => {\n            setTimeout(() => {                \n                resolve(setData(snapShot))\n        }, delayInMs)\n        })\n    }\n\n    const  bubbleSort = (mutableData, i, j) => async event => {\n        if(i >= mutableData.length) {\n            return\n        }\n\n        if(j >= mutableData.length-1-i) {\n            bubbleSort(mutableData, i+1, 0)(undefined)\n            return\n        }\n\n        if(mutableData[j].number > mutableData[j+1].number) {\n            const temp = mutableData[j]\n            mutableData[j] = mutableData[j+1]\n            mutableData[j+1] = temp\n            const snapShot = Array.from(mutableData)\n            await updateStateWithDelay(snapShot)\n        }\n\n        bubbleSort(mutableData, i, j+1)(undefined)\n    }\n\n    return (\n        <Grid container className={classes.chart}>\n        <Grid item>\n        <BarChart width={500} height={300} data={data}\n        margin={{\n            top: 5, right: 30, left: 20, bottom: 5,\n          }}>\n        <CartesianGrid strokeDasharray=\"1 1\" />\n        <XAxis dataKey=\"number\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"number\" fill=\"#616161\" />\n      </BarChart>\n      <Button color=\"primary\" variant=\"outlined\" onClick={bubbleSort(Array.from(data), 0,1)}> Bubble Sort </Button>\n      </Grid>               \n        </Grid>\n    )\n}","import React from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {SelectionSortComponent} from './components/SelectionSortComponent';\nimport { BubbleSortComponent } from './components/BubbleSortComponent';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width:\"100%\"\n  },\n}));\n\nconst gridContainerSizeXS = 12\nconst gridContainerSizeSM = 12\nconst gridContainerSize = 6\n\n\nconst App = () => {\n  const classes = useStyles()\n  const array = [4,5,64,3,2,14,45,67,32,1,22,49,63,23,8,7,34,23,21,9,45]\n  const data = array.map(num => { \n    return {number: num}\n  })\n  const delay = 215\n\n  return (\n    <div className=\"App\">\n      <h1>visual-algorithms</h1>\n      <Grid container spacing={3}>\n        <Grid item xs={gridContainerSizeXS} sm={gridContainerSizeSM} md={gridContainerSize} lg={gridContainerSize}>\n          <Paper className={classes.paper}>\n            <SelectionSortComponent inputData={data} delayInMs={delay}/>\n          </Paper>\n        </Grid>\n        <Grid item xs={gridContainerSizeSM} sm={gridContainerSizeSM} md={gridContainerSize} lg={gridContainerSize}>\n          <Paper className={classes.paper}>\n            <BubbleSortComponent inputData={data} delayInMs={delay}/>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}